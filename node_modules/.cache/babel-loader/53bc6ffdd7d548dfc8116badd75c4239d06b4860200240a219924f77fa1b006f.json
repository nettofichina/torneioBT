{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Netto\\\\Desktop\\\\Meus projetos\\\\torneioBT\\\\gerenciador-beach-tennis\\\\src\\\\components\\\\Torneio\\\\FaseDeGrupos.js\";\n// src/components/Torneio/FaseDeGrupos.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FaseDeGrupos({\n  grupos,\n  onUpdateGroups\n}) {\n  // Lógica para criar jogos dentro de um grupo pode ser complexa, então aqui está uma simplificação\n  const criarJogosParaGrupo = duplas => {\n    const jogos = [];\n    for (let i = 0; i < duplas.length; i++) {\n      for (let j = i + 1; j < duplas.length; j++) {\n        jogos.push({\n          dupla1: duplas[i],\n          dupla2: duplas[j],\n          placar: '',\n          submetido: false\n        });\n      }\n    }\n    return jogos;\n  };\n  const handleSubmitScore = (jogo, placar) => {\n    const newGrupos = grupos.map(grupo => {\n      if (grupo.id === jogo.grupoId) {\n        return {\n          ...grupo,\n          jogos: grupo.jogos.map(j => j.dupla1 === jogo.dupla1 && j.dupla2 === jogo.dupla2 ? {\n            ...j,\n            placar,\n            submetido: true\n          } : j)\n        };\n      }\n      return grupo;\n    });\n    onUpdateGroups(newGrupos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: grupos.map(grupo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Grupo \", grupo.id + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), grupo.jogos.map((jogo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [jogo.dupla1.join(' & '), \" vs \", jogo.dupla2.join(' & '), \" -\", jogo.submetido ? jogo.placar : /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Placar\",\n          onChange: e => handleSubmitScore(jogo, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 47\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))]\n    }, grupo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = FaseDeGrupos;\nexport default FaseDeGrupos;\nvar _c;\n$RefreshReg$(_c, \"FaseDeGrupos\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FaseDeGrupos","grupos","onUpdateGroups","criarJogosParaGrupo","duplas","jogos","i","length","j","push","dupla1","dupla2","placar","submetido","handleSubmitScore","jogo","newGrupos","map","grupo","id","grupoId","children","fileName","_jsxFileName","lineNumber","columnNumber","index","join","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Netto/Desktop/Meus projetos/torneioBT/gerenciador-beach-tennis/src/components/Torneio/FaseDeGrupos.js"],"sourcesContent":["// src/components/Torneio/FaseDeGrupos.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction FaseDeGrupos({ grupos, onUpdateGroups }) {\r\n  // Lógica para criar jogos dentro de um grupo pode ser complexa, então aqui está uma simplificação\r\n  const criarJogosParaGrupo = (duplas) => {\r\n    const jogos = [];\r\n    for (let i = 0; i < duplas.length; i++) {\r\n      for (let j = i + 1; j < duplas.length; j++) {\r\n        jogos.push({\r\n          dupla1: duplas[i],\r\n          dupla2: duplas[j],\r\n          placar: '',\r\n          submetido: false\r\n        });\r\n      }\r\n    }\r\n    return jogos;\r\n  };\r\n\r\n  const handleSubmitScore = (jogo, placar) => {\r\n    const newGrupos = grupos.map(grupo => {\r\n      if (grupo.id === jogo.grupoId) {\r\n        return {\r\n          ...grupo,\r\n          jogos: grupo.jogos.map(j => j.dupla1 === jogo.dupla1 && j.dupla2 === jogo.dupla2 ? { ...j, placar, submetido: true } : j)\r\n        };\r\n      }\r\n      return grupo;\r\n    });\r\n    onUpdateGroups(newGrupos);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {grupos.map(grupo => (\r\n        <div key={grupo.id}>\r\n          <h3>Grupo {grupo.id + 1}</h3>\r\n          {grupo.jogos.map((jogo, index) => (\r\n            <div key={index}>\r\n              {jogo.dupla1.join(' & ')} vs {jogo.dupla2.join(' & ')} - \r\n              {jogo.submetido ? jogo.placar : <input placeholder=\"Placar\" onChange={(e) => handleSubmitScore(jogo, e.target.value)} />}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaseDeGrupos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}