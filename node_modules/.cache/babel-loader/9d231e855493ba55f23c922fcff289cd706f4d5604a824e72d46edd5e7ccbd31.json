{"ast":null,"code":"export const dividirGrupos = duplas => {\n  if (duplas.length < 3) {\n    throw new Error(\"É necessário pelo menos 3 duplas para formar grupos.\");\n  }\n  let numGrupos;\n  if (duplas.length <= 5) numGrupos = 1;else if (duplas.length <= 8) numGrupos = 2;else if (duplas.length <= 11) numGrupos = 3;else if (duplas.length <= 14) numGrupos = 4;else if (duplas.length <= 17) numGrupos = 5;else numGrupos = 6;\n  let grupos = [];\n  let duplasPorGrupo = Math.floor(duplas.length / numGrupos);\n  let resto = duplas.length % numGrupos;\n  for (let i = 0; i < numGrupos; i++) {\n    let grupoSize = duplasPorGrupo + (i < resto ? 1 : 0);\n    grupos.push({\n      id: i,\n      duplas: duplas.splice(0, grupoSize),\n      jogos: criarJogosParaGrupo(duplas.splice(0, grupoSize))\n    });\n  }\n\n  // Ajuste final para garantir que cada grupo tenha pelo menos 3 duplas se possível\n  if (numGrupos > 1) {\n    while (grupos.some(g => g.duplas.length < 3) && duplas.length > 0) {\n      let menorGrupo = grupos.reduce((menor, grupo) => grupo.duplas.length < menor.duplas.length ? grupo : menor);\n      menorGrupo.duplas.push(duplas.shift());\n    }\n  }\n  return grupos;\n};\nexport const criarJogosParaGrupo = (duplas, grupoIndex = 0) => {\n  let jogos = [];\n  for (let i = 0; i < duplas.length; i++) {\n    for (let j = i + 1; j < duplas.length; j++) {\n      jogos.push({\n        dupla1: duplas[i],\n        dupla2: duplas[j],\n        placar: '',\n        submetido: false,\n        jogoIndex: jogos.length,\n        grupoIndex\n      });\n    }\n  }\n  return jogos;\n};","map":{"version":3,"names":["dividirGrupos","duplas","length","Error","numGrupos","grupos","duplasPorGrupo","Math","floor","resto","i","grupoSize","push","id","splice","jogos","criarJogosParaGrupo","some","g","menorGrupo","reduce","menor","grupo","shift","grupoIndex","j","dupla1","dupla2","placar","submetido","jogoIndex"],"sources":["C:/Users/Netto/Desktop/Meus projetos/torneioBT/gerenciador-beach-tennis/src/utils/torneioUtils.js"],"sourcesContent":["export const dividirGrupos = (duplas) => {\r\n  if (duplas.length < 3) {\r\n    throw new Error(\"É necessário pelo menos 3 duplas para formar grupos.\");\r\n  }\r\n  \r\n  let numGrupos;\r\n  if (duplas.length <= 5) numGrupos = 1;\r\n  else if (duplas.length <= 8) numGrupos = 2;\r\n  else if (duplas.length <= 11) numGrupos = 3;\r\n  else if (duplas.length <= 14) numGrupos = 4;\r\n  else if (duplas.length <= 17) numGrupos = 5;\r\n  else numGrupos = 6;\r\n\r\n  let grupos = [];\r\n  let duplasPorGrupo = Math.floor(duplas.length / numGrupos);\r\n  let resto = duplas.length % numGrupos;\r\n\r\n  for (let i = 0; i < numGrupos; i++) {\r\n    let grupoSize = duplasPorGrupo + (i < resto ? 1 : 0);\r\n    grupos.push({\r\n      id: i,\r\n      duplas: duplas.splice(0, grupoSize),\r\n      jogos: criarJogosParaGrupo(duplas.splice(0, grupoSize))\r\n    });\r\n  }\r\n\r\n  // Ajuste final para garantir que cada grupo tenha pelo menos 3 duplas se possível\r\n  if (numGrupos > 1) {\r\n    while (grupos.some(g => g.duplas.length < 3) && duplas.length > 0) {\r\n      let menorGrupo = grupos.reduce((menor, grupo) => grupo.duplas.length < menor.duplas.length ? grupo : menor);\r\n      menorGrupo.duplas.push(duplas.shift());\r\n    }\r\n  }\r\n\r\n  return grupos;\r\n};\r\n\r\nexport const criarJogosParaGrupo = (duplas, grupoIndex = 0) => {\r\n  let jogos = [];\r\n  for (let i = 0; i < duplas.length; i++) {\r\n    for (let j = i + 1; j < duplas.length; j++) {\r\n      jogos.push({\r\n        dupla1: duplas[i],\r\n        dupla2: duplas[j],\r\n        placar: '',\r\n        submetido: false,\r\n        jogoIndex: jogos.length,\r\n        grupoIndex\r\n      });\r\n    }\r\n  }\r\n  return jogos;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,MAAM,IAAK;EACvC,IAAIA,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EAEA,IAAIC,SAAS;EACb,IAAIH,MAAM,CAACC,MAAM,IAAI,CAAC,EAAEE,SAAS,GAAG,CAAC,CAAC,KACjC,IAAIH,MAAM,CAACC,MAAM,IAAI,CAAC,EAAEE,SAAS,GAAG,CAAC,CAAC,KACtC,IAAIH,MAAM,CAACC,MAAM,IAAI,EAAE,EAAEE,SAAS,GAAG,CAAC,CAAC,KACvC,IAAIH,MAAM,CAACC,MAAM,IAAI,EAAE,EAAEE,SAAS,GAAG,CAAC,CAAC,KACvC,IAAIH,MAAM,CAACC,MAAM,IAAI,EAAE,EAAEE,SAAS,GAAG,CAAC,CAAC,KACvCA,SAAS,GAAG,CAAC;EAElB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACP,MAAM,CAACC,MAAM,GAAGE,SAAS,CAAC;EAC1D,IAAIK,KAAK,GAAGR,MAAM,CAACC,MAAM,GAAGE,SAAS;EAErC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,EAAEM,CAAC,EAAE,EAAE;IAClC,IAAIC,SAAS,GAAGL,cAAc,IAAII,CAAC,GAAGD,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IACpDJ,MAAM,CAACO,IAAI,CAAC;MACVC,EAAE,EAAEH,CAAC;MACLT,MAAM,EAAEA,MAAM,CAACa,MAAM,CAAC,CAAC,EAAEH,SAAS,CAAC;MACnCI,KAAK,EAAEC,mBAAmB,CAACf,MAAM,CAACa,MAAM,CAAC,CAAC,EAAEH,SAAS,CAAC;IACxD,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIP,SAAS,GAAG,CAAC,EAAE;IACjB,OAAOC,MAAM,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjB,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,IAAID,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;MACjE,IAAIiB,UAAU,GAAGd,MAAM,CAACe,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKA,KAAK,CAACrB,MAAM,CAACC,MAAM,GAAGmB,KAAK,CAACpB,MAAM,CAACC,MAAM,GAAGoB,KAAK,GAAGD,KAAK,CAAC;MAC3GF,UAAU,CAAClB,MAAM,CAACW,IAAI,CAACX,MAAM,CAACsB,KAAK,CAAC,CAAC,CAAC;IACxC;EACF;EAEA,OAAOlB,MAAM;AACf,CAAC;AAED,OAAO,MAAMW,mBAAmB,GAAGA,CAACf,MAAM,EAAEuB,UAAU,GAAG,CAAC,KAAK;EAC7D,IAAIT,KAAK,GAAG,EAAE;EACd,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,MAAM,CAACC,MAAM,EAAEQ,CAAC,EAAE,EAAE;IACtC,KAAK,IAAIe,CAAC,GAAGf,CAAC,GAAG,CAAC,EAAEe,CAAC,GAAGxB,MAAM,CAACC,MAAM,EAAEuB,CAAC,EAAE,EAAE;MAC1CV,KAAK,CAACH,IAAI,CAAC;QACTc,MAAM,EAAEzB,MAAM,CAACS,CAAC,CAAC;QACjBiB,MAAM,EAAE1B,MAAM,CAACwB,CAAC,CAAC;QACjBG,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAEf,KAAK,CAACb,MAAM;QACvBsB;MACF,CAAC,CAAC;IACJ;EACF;EACA,OAAOT,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}