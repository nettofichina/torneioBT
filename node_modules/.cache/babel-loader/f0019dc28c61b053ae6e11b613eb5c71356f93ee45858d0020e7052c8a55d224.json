{"ast":null,"code":"export function saveTournament(tournament) {\n  const tournaments = loadTournaments();\n  tournaments[tournament.nome] = tournament;\n  localStorage.setItem('tournaments', JSON.stringify(tournaments));\n}\nexport function loadTournaments() {\n  return JSON.parse(localStorage.getItem('tournaments')) || {};\n}\nexport function deleteTournament(nome) {\n  const tournaments = loadTournaments();\n  delete tournaments[nome];\n  localStorage.setItem('tournaments', JSON.stringify(tournaments));\n}\nexport function generateTournament(nome, duplas, dataInicio, horaInicio) {\n  if (!nome) throw new Error('Nome do torneio é obrigatório.');\n  if (duplas.length < 3) throw new Error('Mínimo de 3 duplas necessário.');\n  const grupos = [];\n  const duplasEmbaralhadas = [...duplas].sort(() => Math.random() - 0.5);\n  const numGrupos = Math.ceil(duplas.length / 5);\n  for (let i = 0; i < numGrupos; i++) {\n    const grupoDuplas = duplasEmbaralhadas.slice(i * 5, (i + 1) * 5);\n    const jogos = [];\n    for (let j = 0; j < grupoDuplas.length; j++) {\n      for (let k = j + 1; k < grupoDuplas.length; k++) {\n        jogos.push({\n          dupla1: grupoDuplas[j],\n          dupla2: grupoDuplas[k],\n          placar: '',\n          submetido: false\n        });\n      }\n    }\n    grupos.push({\n      id: i,\n      duplas: grupoDuplas,\n      jogos\n    });\n  }\n  const historicoDuplas = duplas.reduce((acc, dupla) => {\n    acc[dupla.join('')] = {\n      dupla,\n      pontos: 0,\n      jogos: 0,\n      jogosVencidos: 0,\n      gamesVencidos: 0,\n      gamesPerdidos: 0\n    };\n    return acc;\n  }, {});\n  return {\n    nome,\n    dataCriacao: new Date().toISOString(),\n    dataTorneio: dataInicio,\n    dataInicio,\n    horaInicio,\n    duplas,\n    grupos,\n    jogosEliminatoria: [],\n    finalConfigurada: false,\n    terceiroLugarConfigurado: false,\n    ranking: [],\n    duplasBye: [],\n    historicoDuplas,\n    status: 'em andamento',\n    faseAtual: 'grupos'\n  };\n}\nexport function classificarDuplasPorDesempate(duplas, jogos) {\n  const pontuacao = duplas.reduce((acc, dupla) => {\n    acc[dupla.join('')] = {\n      pontos: 0,\n      gamesVencidos: 0,\n      gamesPerdidos: 0\n    };\n    return acc;\n  }, {});\n  jogos.forEach(jogo => {\n    if (!jogo.placar || typeof jogo.placar !== 'string' || !jogo.placar.includes('-')) {\n      console.log('Jogo inválido ignorado:', jogo);\n      return;\n    }\n    const [g1, g2] = jogo.placar.split('-').map(Number);\n    if (isNaN(g1) || isNaN(g2)) {\n      console.log('Placar inválido ignorado:', jogo);\n      return;\n    }\n    const chave1 = jogo.dupla1.join('');\n    const chave2 = jogo.dupla2.join('');\n    if (g1 > g2) {\n      pontuacao[chave1].pontos += 5;\n      pontuacao[chave1].gamesVencidos += g1;\n      pontuacao[chave1].gamesPerdidos += g2;\n      pontuacao[chave2].pontos += 2;\n      pontuacao[chave2].gamesVencidos += g2;\n      pontuacao[chave2].gamesPerdidos += g1;\n    } else {\n      pontuacao[chave2].pontos += 5;\n      pontuacao[chave2].gamesVencidos += g2;\n      pontuacao[chave2].gamesPerdidos += g1;\n      pontuacao[chave1].pontos += 2;\n      pontuacao[chave1].gamesVencidos += g1;\n      pontuacao[chave1].gamesPerdidos += g2;\n    }\n  });\n  return duplas.sort((a, b) => {\n    const chaveA = a.join('');\n    const chaveB = b.join('');\n    return pontuacao[chaveB].pontos - pontuacao[chaveA].pontos || pontuacao[chaveB].gamesVencidos - pontuacao[chaveB].gamesPerdidos - (pontuacao[chaveA].gamesVencidos - pontuacao[chaveA].gamesPerdidos);\n  });\n}","map":{"version":3,"names":["saveTournament","tournament","tournaments","loadTournaments","nome","localStorage","setItem","JSON","stringify","parse","getItem","deleteTournament","generateTournament","duplas","dataInicio","horaInicio","Error","length","grupos","duplasEmbaralhadas","sort","Math","random","numGrupos","ceil","i","grupoDuplas","slice","jogos","j","k","push","dupla1","dupla2","placar","submetido","id","historicoDuplas","reduce","acc","dupla","join","pontos","jogosVencidos","gamesVencidos","gamesPerdidos","dataCriacao","Date","toISOString","dataTorneio","jogosEliminatoria","finalConfigurada","terceiroLugarConfigurado","ranking","duplasBye","status","faseAtual","classificarDuplasPorDesempate","pontuacao","forEach","jogo","includes","console","log","g1","g2","split","map","Number","isNaN","chave1","chave2","a","b","chaveA","chaveB"],"sources":["C:/Users/Netto/Desktop/Meus projetos/torneioBT/gerenciador-beach-tennis/src/utils/torneioUtils.js"],"sourcesContent":["export function saveTournament(tournament) {\r\n  const tournaments = loadTournaments();\r\n  tournaments[tournament.nome] = tournament;\r\n  localStorage.setItem('tournaments', JSON.stringify(tournaments));\r\n}\r\n\r\nexport function loadTournaments() {\r\n  return JSON.parse(localStorage.getItem('tournaments')) || {};\r\n}\r\n\r\nexport function deleteTournament(nome) {\r\n  const tournaments = loadTournaments();\r\n  delete tournaments[nome];\r\n  localStorage.setItem('tournaments', JSON.stringify(tournaments));\r\n}\r\n\r\nexport function generateTournament(nome, duplas, dataInicio, horaInicio) {\r\n  if (!nome) throw new Error('Nome do torneio é obrigatório.');\r\n  if (duplas.length < 3) throw new Error('Mínimo de 3 duplas necessário.');\r\n  \r\n  const grupos = [];\r\n  const duplasEmbaralhadas = [...duplas].sort(() => Math.random() - 0.5);\r\n  const numGrupos = Math.ceil(duplas.length / 5);\r\n  \r\n  for (let i = 0; i < numGrupos; i++) {\r\n    const grupoDuplas = duplasEmbaralhadas.slice(i * 5, (i + 1) * 5);\r\n    const jogos = [];\r\n    for (let j = 0; j < grupoDuplas.length; j++) {\r\n      for (let k = j + 1; k < grupoDuplas.length; k++) {\r\n        jogos.push({\r\n          dupla1: grupoDuplas[j],\r\n          dupla2: grupoDuplas[k],\r\n          placar: '',\r\n          submetido: false,\r\n        });\r\n      }\r\n    }\r\n    grupos.push({ id: i, duplas: grupoDuplas, jogos });\r\n  }\r\n\r\n  const historicoDuplas = duplas.reduce((acc, dupla) => {\r\n    acc[dupla.join('')] = {\r\n      dupla,\r\n      pontos: 0,\r\n      jogos: 0,\r\n      jogosVencidos: 0,\r\n      gamesVencidos: 0,\r\n      gamesPerdidos: 0,\r\n    };\r\n    return acc;\r\n  }, {});\r\n\r\n  return {\r\n    nome,\r\n    dataCriacao: new Date().toISOString(),\r\n    dataTorneio: dataInicio,\r\n    dataInicio,\r\n    horaInicio,\r\n    duplas,\r\n    grupos,\r\n    jogosEliminatoria: [],\r\n    finalConfigurada: false,\r\n    terceiroLugarConfigurado: false,\r\n    ranking: [],\r\n    duplasBye: [],\r\n    historicoDuplas,\r\n    status: 'em andamento',\r\n    faseAtual: 'grupos',\r\n  };\r\n}\r\n\r\nexport function classificarDuplasPorDesempate(duplas, jogos) {\r\n  const pontuacao = duplas.reduce((acc, dupla) => {\r\n    acc[dupla.join('')] = { pontos: 0, gamesVencidos: 0, gamesPerdidos: 0 };\r\n    return acc;\r\n  }, {});\r\n\r\n  jogos.forEach((jogo) => {\r\n    if (!jogo.placar || typeof jogo.placar !== 'string' || !jogo.placar.includes('-')) {\r\n      console.log('Jogo inválido ignorado:', jogo);\r\n      return;\r\n    }\r\n    const [g1, g2] = jogo.placar.split('-').map(Number);\r\n    if (isNaN(g1) || isNaN(g2)) {\r\n      console.log('Placar inválido ignorado:', jogo);\r\n      return;\r\n    }\r\n    const chave1 = jogo.dupla1.join('');\r\n    const chave2 = jogo.dupla2.join('');\r\n    if (g1 > g2) {\r\n      pontuacao[chave1].pontos += 5;\r\n      pontuacao[chave1].gamesVencidos += g1;\r\n      pontuacao[chave1].gamesPerdidos += g2;\r\n      pontuacao[chave2].pontos += 2;\r\n      pontuacao[chave2].gamesVencidos += g2;\r\n      pontuacao[chave2].gamesPerdidos += g1;\r\n    } else {\r\n      pontuacao[chave2].pontos += 5;\r\n      pontuacao[chave2].gamesVencidos += g2;\r\n      pontuacao[chave2].gamesPerdidos += g1;\r\n      pontuacao[chave1].pontos += 2;\r\n      pontuacao[chave1].gamesVencidos += g1;\r\n      pontuacao[chave1].gamesPerdidos += g2;\r\n    }\r\n  });\r\n\r\n  return duplas.sort((a, b) => {\r\n    const chaveA = a.join('');\r\n    const chaveB = b.join('');\r\n    return (\r\n      pontuacao[chaveB].pontos - pontuacao[chaveA].pontos ||\r\n      (pontuacao[chaveB].gamesVencidos - pontuacao[chaveB].gamesPerdidos) -\r\n      (pontuacao[chaveA].gamesVencidos - pontuacao[chaveA].gamesPerdidos)\r\n    );\r\n  });\r\n}"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,UAAU,EAAE;EACzC,MAAMC,WAAW,GAAGC,eAAe,CAAC,CAAC;EACrCD,WAAW,CAACD,UAAU,CAACG,IAAI,CAAC,GAAGH,UAAU;EACzCI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC,CAAC;AAClE;AAEA,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,OAAOI,IAAI,CAACE,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9D;AAEA,OAAO,SAASC,gBAAgBA,CAACP,IAAI,EAAE;EACrC,MAAMF,WAAW,GAAGC,eAAe,CAAC,CAAC;EACrC,OAAOD,WAAW,CAACE,IAAI,CAAC;EACxBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC,CAAC;AAClE;AAEA,OAAO,SAASU,kBAAkBA,CAACR,IAAI,EAAES,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAE;EACvE,IAAI,CAACX,IAAI,EAAE,MAAM,IAAIY,KAAK,CAAC,gCAAgC,CAAC;EAC5D,IAAIH,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAID,KAAK,CAAC,gCAAgC,CAAC;EAExE,MAAME,MAAM,GAAG,EAAE;EACjB,MAAMC,kBAAkB,GAAG,CAAC,GAAGN,MAAM,CAAC,CAACO,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EACtE,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAI,CAACX,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;EAE9C,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;IAClC,MAAMC,WAAW,GAAGP,kBAAkB,CAACQ,KAAK,CAACF,CAAC,GAAG,CAAC,EAAE,CAACA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChE,MAAMG,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACT,MAAM,EAAEY,CAAC,EAAE,EAAE;MAC3C,KAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGJ,WAAW,CAACT,MAAM,EAAEa,CAAC,EAAE,EAAE;QAC/CF,KAAK,CAACG,IAAI,CAAC;UACTC,MAAM,EAAEN,WAAW,CAACG,CAAC,CAAC;UACtBI,MAAM,EAAEP,WAAW,CAACI,CAAC,CAAC;UACtBI,MAAM,EAAE,EAAE;UACVC,SAAS,EAAE;QACb,CAAC,CAAC;MACJ;IACF;IACAjB,MAAM,CAACa,IAAI,CAAC;MAAEK,EAAE,EAAEX,CAAC;MAAEZ,MAAM,EAAEa,WAAW;MAAEE;IAAM,CAAC,CAAC;EACpD;EAEA,MAAMS,eAAe,GAAGxB,MAAM,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IACpDD,GAAG,CAACC,KAAK,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG;MACpBD,KAAK;MACLE,MAAM,EAAE,CAAC;MACTd,KAAK,EAAE,CAAC;MACRe,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE;IACjB,CAAC;IACD,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAO;IACLnC,IAAI;IACJ0C,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACrCC,WAAW,EAAEnC,UAAU;IACvBA,UAAU;IACVC,UAAU;IACVF,MAAM;IACNK,MAAM;IACNgC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAE,KAAK;IACvBC,wBAAwB,EAAE,KAAK;IAC/BC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbjB,eAAe;IACfkB,MAAM,EAAE,cAAc;IACtBC,SAAS,EAAE;EACb,CAAC;AACH;AAEA,OAAO,SAASC,6BAA6BA,CAAC5C,MAAM,EAAEe,KAAK,EAAE;EAC3D,MAAM8B,SAAS,GAAG7C,MAAM,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC9CD,GAAG,CAACC,KAAK,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG;MAAEC,MAAM,EAAE,CAAC;MAAEE,aAAa,EAAE,CAAC;MAAEC,aAAa,EAAE;IAAE,CAAC;IACvE,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAENX,KAAK,CAAC+B,OAAO,CAAEC,IAAI,IAAK;IACtB,IAAI,CAACA,IAAI,CAAC1B,MAAM,IAAI,OAAO0B,IAAI,CAAC1B,MAAM,KAAK,QAAQ,IAAI,CAAC0B,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjFC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,IAAI,CAAC;MAC5C;IACF;IACA,MAAM,CAACI,EAAE,EAAEC,EAAE,CAAC,GAAGL,IAAI,CAAC1B,MAAM,CAACgC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACnD,IAAIC,KAAK,CAACL,EAAE,CAAC,IAAIK,KAAK,CAACJ,EAAE,CAAC,EAAE;MAC1BH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEH,IAAI,CAAC;MAC9C;IACF;IACA,MAAMU,MAAM,GAAGV,IAAI,CAAC5B,MAAM,CAACS,IAAI,CAAC,EAAE,CAAC;IACnC,MAAM8B,MAAM,GAAGX,IAAI,CAAC3B,MAAM,CAACQ,IAAI,CAAC,EAAE,CAAC;IACnC,IAAIuB,EAAE,GAAGC,EAAE,EAAE;MACXP,SAAS,CAACY,MAAM,CAAC,CAAC5B,MAAM,IAAI,CAAC;MAC7BgB,SAAS,CAACY,MAAM,CAAC,CAAC1B,aAAa,IAAIoB,EAAE;MACrCN,SAAS,CAACY,MAAM,CAAC,CAACzB,aAAa,IAAIoB,EAAE;MACrCP,SAAS,CAACa,MAAM,CAAC,CAAC7B,MAAM,IAAI,CAAC;MAC7BgB,SAAS,CAACa,MAAM,CAAC,CAAC3B,aAAa,IAAIqB,EAAE;MACrCP,SAAS,CAACa,MAAM,CAAC,CAAC1B,aAAa,IAAImB,EAAE;IACvC,CAAC,MAAM;MACLN,SAAS,CAACa,MAAM,CAAC,CAAC7B,MAAM,IAAI,CAAC;MAC7BgB,SAAS,CAACa,MAAM,CAAC,CAAC3B,aAAa,IAAIqB,EAAE;MACrCP,SAAS,CAACa,MAAM,CAAC,CAAC1B,aAAa,IAAImB,EAAE;MACrCN,SAAS,CAACY,MAAM,CAAC,CAAC5B,MAAM,IAAI,CAAC;MAC7BgB,SAAS,CAACY,MAAM,CAAC,CAAC1B,aAAa,IAAIoB,EAAE;MACrCN,SAAS,CAACY,MAAM,CAAC,CAACzB,aAAa,IAAIoB,EAAE;IACvC;EACF,CAAC,CAAC;EAEF,OAAOpD,MAAM,CAACO,IAAI,CAAC,CAACoD,CAAC,EAAEC,CAAC,KAAK;IAC3B,MAAMC,MAAM,GAAGF,CAAC,CAAC/B,IAAI,CAAC,EAAE,CAAC;IACzB,MAAMkC,MAAM,GAAGF,CAAC,CAAChC,IAAI,CAAC,EAAE,CAAC;IACzB,OACEiB,SAAS,CAACiB,MAAM,CAAC,CAACjC,MAAM,GAAGgB,SAAS,CAACgB,MAAM,CAAC,CAAChC,MAAM,IAClDgB,SAAS,CAACiB,MAAM,CAAC,CAAC/B,aAAa,GAAGc,SAAS,CAACiB,MAAM,CAAC,CAAC9B,aAAa,IACjEa,SAAS,CAACgB,MAAM,CAAC,CAAC9B,aAAa,GAAGc,SAAS,CAACgB,MAAM,CAAC,CAAC7B,aAAa,CAAC;EAEvE,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}