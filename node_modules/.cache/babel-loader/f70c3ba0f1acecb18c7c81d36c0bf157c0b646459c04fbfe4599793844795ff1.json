{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Netto\\\\Desktop\\\\Meus projetos\\\\torneioBT\\\\gerenciador-beach-tennis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DuplasList from './components/Duplas/DuplasList';\nimport FaseDeGrupos from './components/Torneio/FaseDeGrupos';\nimport FaseEliminatoria from './components/Torneio/FaseEliminatoria';\nimport Button from './components/UI/Button';\nimport './App.css';\nimport { dividirGrupos, classificarDuplasPorDesempate, criarJogosParaGrupo } from './utils/torneioUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [duplas, setDuplas] = useState([]);\n  const [faseAtual, setFaseAtual] = useState('duplas');\n  const [grupos, setGrupos] = useState([]);\n  const [jogosEliminatoria, setJogosEliminatoria] = useState([]);\n  useEffect(() => {\n    console.log('Estado dos jogos eliminatórios atualizado:', jogosEliminatoria);\n  }, [jogosEliminatoria]);\n  const addDupla = dupla => {\n    if (!duplas.some(d => d.includes(dupla[0]) || d.includes(dupla[1]))) {\n      setDuplas(prevDuplas => [...prevDuplas, dupla]);\n    } else {\n      alert('Os nomes dos jogadores devem ser únicos. Um ou ambos já estão registrados.');\n    }\n  };\n  const removeDupla = index => {\n    setDuplas(duplas.filter((_, i) => i !== index));\n  };\n  const startTournament = () => {\n    if (duplas.length < 3) {\n      alert('É necessário pelo menos 3 duplas para começar o torneio.');\n      return;\n    }\n    const gruposCriados = dividirGrupos([...duplas].sort(() => Math.random() - 0.5));\n    gruposCriados.forEach(grupo => {\n      grupo.jogos = criarJogosParaGrupo(grupo);\n    });\n    setGrupos(gruposCriados);\n    setFaseAtual('grupos');\n  };\n  const iniciarFaseEliminatoria = classificados => {\n    let jogos = [];\n    let duplasRestantes = classificados.length;\n    for (let r = 1; duplasRestantes > 1; r++) {\n      for (let i = 0; i < duplasRestantes; i += 2) {\n        jogos.push({\n          dupla1: classificados[i],\n          dupla2: classificados[i + 1] || ['TBD', ''],\n          placar: '',\n          submetido: false,\n          jogoIndex: jogos.length,\n          rodada: r,\n          fase: r === Math.ceil(Math.log2(classificados.length)) ? 'Final' : `Rodada ${r}`\n        });\n      }\n      duplasRestantes = Math.ceil(duplasRestantes / 2);\n      classificados = jogos.slice(-duplasRestantes).map(jogo => ['Vencedor Jogo ' + jogo.jogoIndex, '']);\n    }\n    setJogosEliminatoria(jogos);\n    setFaseAtual('eliminatória');\n  };\n  const encerrarFaseGrupos = () => {\n    if (grupos.some(grupo => grupo.jogos.some(jogo => !jogo.submetido))) {\n      alert('Todos os jogos devem ser submetidos antes de encerrar a fase de grupos.');\n      return;\n    }\n    let classificados = [];\n    grupos.forEach(grupo => {\n      let classificadosGrupo = classificarDuplasPorDesempate(grupo.duplas, grupo.jogos);\n      classificados.push(...classificadosGrupo.slice(0, 2)); // Assume-se 2 primeiros por grupo\n    });\n    if (duplas.length <= 5) {\n      alert(`Campeão: ${classificados[0].join(' e ')}`);\n      setFaseAtual('finalizado');\n    } else {\n      iniciarFaseEliminatoria(classificados);\n    }\n  };\n  const atualizarEstatisticas = () => {\n    console.log('Atualizando estatísticas...');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BT Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Informa\\xE7\\xF5es do Torneio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nomeTorneio\",\n          children: \"Nome do Torneio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nomeTorneio\",\n          placeholder: \"Digite o nome do torneio\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dataTorneio\",\n          children: \"Dia do Torneio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"dataTorneio\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), faseAtual === 'duplas' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DuplasList, {\n          duplas: duplas,\n          onAddDupla: addDupla,\n          onRemoveDupla: removeDupla\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: startTournament,\n          disabled: duplas.length < 3,\n          children: \"Come\\xE7ar Torneio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"organogramaSection\",\n        className: \"section\",\n        style: {\n          display: faseAtual !== 'duplas' ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Organograma do Torneio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"faseAtual\",\n          children: faseAtual === 'grupos' ? 'Fase de Grupos' : faseAtual === 'eliminatória' ? 'Fase Eliminatória' : 'Torneio Finalizado'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), faseAtual === 'grupos' && /*#__PURE__*/_jsxDEV(FaseDeGrupos, {\n          grupos: grupos,\n          onAtualizarEstatisticas: atualizarEstatisticas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), faseAtual === 'eliminatória' && /*#__PURE__*/_jsxDEV(FaseEliminatoria, {\n          fase: \"Fase Eliminat\\xF3ria\",\n          jogos: jogosEliminatoria,\n          onAtualizarEstatisticas: atualizarEstatisticas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), faseAtual === 'grupos' && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: encerrarFaseGrupos,\n          children: \"Encerrar Fase de Grupos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), faseAtual === 'eliminatória' && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (jogosEliminatoria.some(jogo => !jogo.submetido)) {\n              alert('Todos os jogos devem ser submetidos antes de finalizar a fase eliminatória.');\n              return;\n            }\n            setFaseAtual('finalizado');\n          },\n          disabled: jogosEliminatoria.some(jogo => !jogo.submetido),\n          children: \"Finalizar Fase Eliminat\\xF3ria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), faseAtual === 'finalizado' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"O torneio foi finalizado. Parab\\xE9ns aos vencedores!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"developed-by\",\n        children: \"Desenvolvido por Ant\\xF4nio Fichina Netto - 2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1aFdFA2KDxvBrfMrQ1g/Ugpawgo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DuplasList","FaseDeGrupos","FaseEliminatoria","Button","dividirGrupos","classificarDuplasPorDesempate","criarJogosParaGrupo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","duplas","setDuplas","faseAtual","setFaseAtual","grupos","setGrupos","jogosEliminatoria","setJogosEliminatoria","console","log","addDupla","dupla","some","d","includes","prevDuplas","alert","removeDupla","index","filter","_","i","startTournament","length","gruposCriados","sort","Math","random","forEach","grupo","jogos","iniciarFaseEliminatoria","classificados","duplasRestantes","r","push","dupla1","dupla2","placar","submetido","jogoIndex","rodada","fase","ceil","log2","slice","map","jogo","encerrarFaseGrupos","classificadosGrupo","join","atualizarEstatisticas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","required","onAddDupla","onRemoveDupla","onClick","disabled","style","display","onAtualizarEstatisticas","_c","$RefreshReg$"],"sources":["C:/Users/Netto/Desktop/Meus projetos/torneioBT/gerenciador-beach-tennis/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DuplasList from './components/Duplas/DuplasList';\nimport FaseDeGrupos from './components/Torneio/FaseDeGrupos';\nimport FaseEliminatoria from './components/Torneio/FaseEliminatoria';\nimport Button from './components/UI/Button';\nimport './App.css';\nimport { \n  dividirGrupos, \n  classificarDuplasPorDesempate, \n  criarJogosParaGrupo \n} from './utils/torneioUtils';\n\nfunction App() {\n  const [duplas, setDuplas] = useState([]);\n  const [faseAtual, setFaseAtual] = useState('duplas');\n  const [grupos, setGrupos] = useState([]);\n  const [jogosEliminatoria, setJogosEliminatoria] = useState([]);\n\n  useEffect(() => {\n    console.log('Estado dos jogos eliminatórios atualizado:', jogosEliminatoria);\n  }, [jogosEliminatoria]);\n\n  const addDupla = (dupla) => {\n    if (!duplas.some(d => d.includes(dupla[0]) || d.includes(dupla[1]))) {\n      setDuplas(prevDuplas => [...prevDuplas, dupla]);\n    } else {\n      alert('Os nomes dos jogadores devem ser únicos. Um ou ambos já estão registrados.');\n    }\n  };\n\n  const removeDupla = (index) => {\n    setDuplas(duplas.filter((_, i) => i !== index));\n  };\n\n  const startTournament = () => {\n    if (duplas.length < 3) {\n      alert('É necessário pelo menos 3 duplas para começar o torneio.');\n      return;\n    }\n    const gruposCriados = dividirGrupos([...duplas].sort(() => Math.random() - 0.5));\n    gruposCriados.forEach(grupo => {\n      grupo.jogos = criarJogosParaGrupo(grupo);\n    });\n    setGrupos(gruposCriados);\n    setFaseAtual('grupos');\n  };\n\n  const iniciarFaseEliminatoria = (classificados) => {\n    let jogos = [];\n    let duplasRestantes = classificados.length;\n    for (let r = 1; duplasRestantes > 1; r++) {\n      for (let i = 0; i < duplasRestantes; i += 2) {\n        jogos.push({\n          dupla1: classificados[i],\n          dupla2: classificados[i + 1] || ['TBD', ''],\n          placar: '',\n          submetido: false,\n          jogoIndex: jogos.length,\n          rodada: r,\n          fase: r === Math.ceil(Math.log2(classificados.length)) ? 'Final' : `Rodada ${r}`\n        });\n      }\n      duplasRestantes = Math.ceil(duplasRestantes / 2);\n      classificados = jogos.slice(-duplasRestantes).map(jogo => ['Vencedor Jogo ' + jogo.jogoIndex, '']);\n    }\n    setJogosEliminatoria(jogos);\n    setFaseAtual('eliminatória');\n  };\n\n  const encerrarFaseGrupos = () => {\n    if (grupos.some(grupo => grupo.jogos.some(jogo => !jogo.submetido))) {\n      alert('Todos os jogos devem ser submetidos antes de encerrar a fase de grupos.');\n      return;\n    }\n\n    let classificados = [];\n    grupos.forEach(grupo => {\n      let classificadosGrupo = classificarDuplasPorDesempate(grupo.duplas, grupo.jogos);\n      classificados.push(...classificadosGrupo.slice(0, 2)); // Assume-se 2 primeiros por grupo\n    });\n\n    if (duplas.length <= 5) {\n      alert(`Campeão: ${classificados[0].join(' e ')}`);\n      setFaseAtual('finalizado');\n    } else {\n      iniciarFaseEliminatoria(classificados);\n    }\n  };\n\n  const atualizarEstatisticas = () => {\n    console.log('Atualizando estatísticas...');\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>BT Connect</h1>\n      </header>\n      <main className=\"container\">\n        <section className=\"section\">\n          <h2>Informações do Torneio</h2>\n          <label htmlFor=\"nomeTorneio\">Nome do Torneio:</label>\n          <input type=\"text\" id=\"nomeTorneio\" placeholder=\"Digite o nome do torneio\" required />\n          <label htmlFor=\"dataTorneio\">Dia do Torneio:</label>\n          <input type=\"date\" id=\"dataTorneio\" required />\n        </section>\n        {faseAtual === 'duplas' &&\n          <>\n            <DuplasList duplas={duplas} onAddDupla={addDupla} onRemoveDupla={removeDupla} />\n            <Button onClick={startTournament} disabled={duplas.length < 3}>\n              Começar Torneio\n            </Button>\n          </>\n        }\n        <section id=\"organogramaSection\" className=\"section\" style={{ display: faseAtual !== 'duplas' ? 'block' : 'none' }}>\n          <h2>Organograma do Torneio</h2>\n          <h3 id=\"faseAtual\">{faseAtual === 'grupos' ? 'Fase de Grupos' : faseAtual === 'eliminatória' ? 'Fase Eliminatória' : 'Torneio Finalizado'}</h3>\n          {faseAtual === 'grupos' && \n            <FaseDeGrupos grupos={grupos} onAtualizarEstatisticas={atualizarEstatisticas} />\n          }\n          {faseAtual === 'eliminatória' && \n            <FaseEliminatoria \n              fase=\"Fase Eliminatória\"\n              jogos={jogosEliminatoria}\n              onAtualizarEstatisticas={atualizarEstatisticas}\n            />\n          }\n          {faseAtual === 'grupos' && \n            <Button onClick={encerrarFaseGrupos}>\n              Encerrar Fase de Grupos\n            </Button>\n          }\n          {faseAtual === 'eliminatória' && \n            <Button \n              onClick={() => {\n                if (jogosEliminatoria.some(jogo => !jogo.submetido)) {\n                  alert('Todos os jogos devem ser submetidos antes de finalizar a fase eliminatória.');\n                  return;\n                }\n                setFaseAtual('finalizado');\n              }}\n              disabled={jogosEliminatoria.some(jogo => !jogo.submetido)}\n            >\n              Finalizar Fase Eliminatória\n            </Button>\n          }\n          {faseAtual === 'finalizado' && \n            <p>O torneio foi finalizado. Parabéns aos vencedores!</p>\n          }\n        </section>\n      </main>\n      <footer>\n        <p className=\"developed-by\">Desenvolvido por Antônio Fichina Netto - 2024</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}