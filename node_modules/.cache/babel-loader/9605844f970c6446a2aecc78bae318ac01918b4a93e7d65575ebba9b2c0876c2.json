{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Netto\\\\Desktop\\\\Meus projetos\\\\torneioBT\\\\gerenciador-beach-tennis\\\\src\\\\components\\\\Torneio\\\\FaseEliminatoria.js\";\nimport React from 'react';\nimport Jogo from './Jogo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FaseEliminatoria({\n  jogos,\n  onAtualizarPlacar,\n  onAvancarParaFinal\n}) {\n  const handleSubmitScore = (jogo, placar) => {\n    onAtualizarPlacar(jogo, placar);\n\n    // Verifica se todos os jogos da fase eliminatória foram submetidos\n    if (jogos.every(j => j.submetido)) {\n      onAvancarParaFinal(jogos); // Passa os jogos para uma função que define a final\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fase Eliminat\\xF3ria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), jogos.map((jogo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: jogo.fase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Jogo, {\n        jogo: jogo,\n        onSubmeterPlacar: handleSubmitScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = FaseEliminatoria;\nexport default FaseEliminatoria;\nvar _c;\n$RefreshReg$(_c, \"FaseEliminatoria\");","map":{"version":3,"names":["React","Jogo","jsxDEV","_jsxDEV","FaseEliminatoria","jogos","onAtualizarPlacar","onAvancarParaFinal","handleSubmitScore","jogo","placar","every","j","submetido","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","fase","onSubmeterPlacar","_c","$RefreshReg$"],"sources":["C:/Users/Netto/Desktop/Meus projetos/torneioBT/gerenciador-beach-tennis/src/components/Torneio/FaseEliminatoria.js"],"sourcesContent":["import React from 'react';\r\nimport Jogo from './Jogo';\r\n\r\nfunction FaseEliminatoria({ jogos, onAtualizarPlacar, onAvancarParaFinal }) {\r\n  const handleSubmitScore = (jogo, placar) => {\r\n    onAtualizarPlacar(jogo, placar);\r\n    \r\n    // Verifica se todos os jogos da fase eliminatória foram submetidos\r\n    if (jogos.every(j => j.submetido)) {\r\n      onAvancarParaFinal(jogos); // Passa os jogos para uma função que define a final\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Fase Eliminatória</h2>\r\n      {jogos.map((jogo, index) => (\r\n        <div key={index}>\r\n          <h3>{jogo.fase}</h3>\r\n          <Jogo \r\n            jogo={jogo} \r\n            onSubmeterPlacar={handleSubmitScore}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaseEliminatoria;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAC;EAAEC,KAAK;EAAEC,iBAAiB;EAAEC;AAAmB,CAAC,EAAE;EAC1E,MAAMC,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IAC1CJ,iBAAiB,CAACG,IAAI,EAAEC,MAAM,CAAC;;IAE/B;IACA,IAAIL,KAAK,CAACM,KAAK,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,EAAE;MACjCN,kBAAkB,CAACF,KAAK,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,oBACEF,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBb,KAAK,CAACc,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBACrBjB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAKL,IAAI,CAACY;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBf,OAAA,CAACF,IAAI;QACHQ,IAAI,EAAEA,IAAK;QACXa,gBAAgB,EAAEd;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA,GALME,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACK,EAAA,GAxBQnB,gBAAgB;AA0BzB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}