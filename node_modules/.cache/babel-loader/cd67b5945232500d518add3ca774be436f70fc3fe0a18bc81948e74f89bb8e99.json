{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Netto\\\\Desktop\\\\Meus projetos\\\\torneioBT\\\\gerenciador-beach-tennis\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport DuplasList from './components/Duplas/DuplasList';\nimport FaseDeGrupos from './components/Torneio/FaseDeGrupos';\nimport FaseEliminatoria from './components/Torneio/FaseEliminatoria';\nimport FaseFinal from './components/Torneio/FaseFinal';\nimport MeusTorneios from './components/Torneio/MeusTorneios';\nimport { saveTournament, loadTournaments, deleteTournament, generateTournament, classificarDuplasPorDesempate } from './utils/torneioUtils';\nimport './App.css';\nimport gameDay from './assets/img/game-day.svg';\nimport btConnectLogo from './assets/img/btConnect.png';\nimport tournamentsIcon from './assets/icons/tournaments.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // ... (outras funÃ§Ãµes e estados permanecem iguais)\n\n  const gerarRelatorioEstatisticas = () => {\n    const todosOsJogos = [...currentTournament.grupos.flatMap(grupo => grupo.jogos), ...currentTournament.jogosEliminatoria.filter(jogo => jogo.placar !== 'BYE')].filter(jogo => jogo.submetido);\n    console.log('Todos os jogos para relatÃ³rio:', todosOsJogos);\n    const totalPartidas = todosOsJogos.length;\n    const totalGames = todosOsJogos.reduce((acc, jogo) => {\n      const [g1, g2] = jogo.placar.split('-').map(Number);\n      return acc + (isNaN(g1) || isNaN(g2) ? 0 : g1 + g2);\n    }, 0);\n    let historicoDuplas = currentTournament.historicoDuplas || {};\n    if (Object.keys(historicoDuplas).length === 0) {\n      console.warn('historicoDuplas estÃ¡ vazio ou undefined, reconstruindo a partir dos jogos.');\n      historicoDuplas = currentTournament.duplas.reduce((acc, dupla) => {\n        acc[dupla.join('')] = {\n          dupla,\n          pontos: 0,\n          jogos: 0,\n          jogosVencidos: 0,\n          gamesVencidos: 0,\n          gamesPerdidos: 0\n        };\n        return acc;\n      }, {});\n      todosOsJogos.forEach(jogo => {\n        const [g1, g2] = jogo.placar.split('-').map(Number);\n        if (isNaN(g1) || isNaN(g2)) return;\n        const chave1 = jogo.dupla1.join('');\n        const chave2 = jogo.dupla2.join('');\n        historicoDuplas[chave1].jogos += 1;\n        historicoDuplas[chave2].jogos += 1;\n        if (g1 > g2) {\n          historicoDuplas[chave1].pontos += 5;\n          historicoDuplas[chave1].jogosVencidos += 1;\n          historicoDuplas[chave1].gamesVencidos += g1;\n          historicoDuplas[chave1].gamesPerdidos += g2;\n          historicoDuplas[chave2].pontos += 2;\n          historicoDuplas[chave2].gamesVencidos += g2;\n          historicoDuplas[chave2].gamesPerdidos += g1;\n        } else {\n          historicoDuplas[chave2].pontos += 5;\n          historicoDuplas[chave2].jogosVencidos += 1;\n          historicoDuplas[chave2].gamesVencidos += g2;\n          historicoDuplas[chave2].gamesPerdidos += g1;\n          historicoDuplas[chave1].pontos += 2;\n          historicoDuplas[chave1].gamesVencidos += g1;\n          historicoDuplas[chave1].gamesPerdidos += g2;\n        }\n      });\n      updateTournamentField('historicoDuplas', historicoDuplas);\n    }\n    const estatisticasDuplas = Object.values(historicoDuplas).map(dados => {\n      var _currentTournament$ra;\n      const derrotas = dados.jogos - dados.jogosVencidos;\n      const saldoGames = dados.gamesVencidos - dados.gamesPerdidos;\n      const posicaoRanking = ((_currentTournament$ra = currentTournament.ranking.find(r => r.dupla.join('') === dados.dupla.join(''))) === null || _currentTournament$ra === void 0 ? void 0 : _currentTournament$ra.lugar) || '-';\n      return {\n        dupla: dados.dupla.join(' & '),\n        jogos: dados.jogos,\n        vitorias: dados.jogosVencidos,\n        derrotas,\n        gamesVencidos: dados.gamesVencidos,\n        gamesPerdidos: dados.gamesPerdidos,\n        saldoGames,\n        posicaoRanking\n      };\n    }).sort((a, b) => {\n      if (a.posicaoRanking === '-' && b.posicaoRanking !== '-') return 1;\n      if (b.posicaoRanking === '-' && a.posicaoRanking !== '-') return -1;\n      if (a.posicaoRanking !== '-' && b.posicaoRanking !== '-') return a.posicaoRanking - b.posicaoRanking;\n      return b.saldoGames - a.saldoGames;\n    });\n    const melhorCampanha = estatisticasDuplas.reduce((melhor, atual) => atual.saldoGames > melhor.saldoGames ? atual : melhor, estatisticasDuplas[0] || {\n      dupla: 'Nenhuma',\n      vitorias: 0,\n      jogos: 0,\n      saldoGames: 0\n    });\n    console.log('EstatÃ­sticas finais:', estatisticasDuplas);\n    return {\n      totalPartidas,\n      totalGames,\n      estatisticasDuplas,\n      melhorCampanha,\n      todosOsJogos // Adicionamos isso para usar no histÃ³rico\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: faseAtual === 'finalizado' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ranking Final:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"POSI\\xC7\\xC3O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DUPLAS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentTournament.ranking.map((posiÃ§Ã£o, index) => {\n              let medalha = '';\n              let color = '#000';\n              if (posiÃ§Ã£o.lugar === 1) {\n                medalha = 'ðŸ¥‡';\n                color = 'gold';\n              } else if (posiÃ§Ã£o.lugar === 2) {\n                medalha = 'ðŸ¥ˆ';\n                color = 'silver';\n              } else if (posiÃ§Ã£o.lugar === 3) {\n                medalha = 'ðŸ¥‰';\n                color = 'brown';\n              }\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color\n                  },\n                  children: [medalha, \" \", posiÃ§Ã£o.lugar, \"\\xBA Colocado\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: posiÃ§Ã£o.dupla.join(' & ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relatorio-estatisticas\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Estat\\xEDsticas Gerais do Torneio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), (() => {\n            const {\n              totalPartidas,\n              totalGames,\n              estatisticasDuplas,\n              melhorCampanha,\n              todosOsJogos\n            } = gerarRelatorioEstatisticas();\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total de Partidas Disputadas:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 24\n                }, this), \" \", totalPartidas]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total de Games Disputados:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 24\n                }, this), \" \", totalGames]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Melhor Campanha:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this), \" \", melhorCampanha.dupla, \" ( Saldo de Games: \", melhorCampanha.saldoGames, \", \", melhorCampanha.vitorias, \" vit\\xF3rias em\", ' ', melhorCampanha.jogos, \" jogos)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Estat\\xEDsticas por Dupla\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), estatisticasDuplas.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"POSI\\xC7\\xC3O\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DUPLA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"PARTIDAS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"VIT\\xD3RIAS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DERROTAS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"GAMES (V/P)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"SALDO GAMES\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: estatisticasDuplas.map((dupla, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dupla.posicaoRanking !== '-' ? `${dupla.posicaoRanking}Âº` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dupla.dupla\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dupla.jogos\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dupla.vitorias\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dupla.derrotas\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [dupla.gamesVencidos, \"/\", dupla.gamesPerdidos]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dupla.saldoGames\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 31\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Nenhuma estat\\xEDstica dispon\\xEDvel para as duplas.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Hist\\xF3rico de Jogos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Fase de Grupos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), currentTournament.grupos.map(grupo => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [\"Grupo \", grupo.id + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Jogo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Dupla 1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Placar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Dupla 2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: grupo.jogos.filter(jogo => jogo.submetido).map((jogo, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: jogo.dupla1.join(' & ')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: jogo.placar\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: jogo.dupla2.join(' & ')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 35\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this)]\n              }, `grupo-${grupo.id}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Fase Eliminat\\xF3ria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Jogo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Dupla 1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Placar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Dupla 2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Fase\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: currentTournament.jogosEliminatoria.filter(jogo => jogo.submetido && jogo.fase !== 'Final' && jogo.fase !== 'Disputa 3Âº Lugar').map((jogo, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.dupla1.join(' & ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.placar\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.dupla2.join(' & ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.fase\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 31\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Fase Final\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Jogo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Dupla 1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Placar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Dupla 2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Fase\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: currentTournament.jogosEliminatoria.filter(jogo => jogo.submetido && (jogo.fase === 'Final' || jogo.fase === 'Disputa 3Âº Lugar')).map((jogo, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.dupla1.join(' & ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.placar\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.dupla2.join(' & ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: jogo.fase\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 31\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Torneio Finalizado em \", new Date().toLocaleString('pt-BR'), \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: resetTournament,\n                className: \"novo-torneio-btn\",\n                children: \"In\\xEDcio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DuplasList","FaseDeGrupos","FaseEliminatoria","FaseFinal","MeusTorneios","saveTournament","loadTournaments","deleteTournament","generateTournament","classificarDuplasPorDesempate","gameDay","btConnectLogo","tournamentsIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","gerarRelatorioEstatisticas","todosOsJogos","currentTournament","grupos","flatMap","grupo","jogos","jogosEliminatoria","filter","jogo","placar","submetido","console","log","totalPartidas","length","totalGames","reduce","acc","g1","g2","split","map","Number","isNaN","historicoDuplas","Object","keys","warn","duplas","dupla","join","pontos","jogosVencidos","gamesVencidos","gamesPerdidos","forEach","chave1","dupla1","chave2","dupla2","updateTournamentField","estatisticasDuplas","values","dados","_currentTournament$ra","derrotas","saldoGames","posicaoRanking","ranking","find","r","lugar","vitorias","sort","a","b","melhorCampanha","melhor","atual","className","children","faseAtual","fileName","_jsxFileName","lineNumber","columnNumber","posiÃ§Ã£o","index","medalha","color","style","id","fase","Date","toLocaleString","onClick","resetTournament","_c","$RefreshReg$"],"sources":["C:/Users/Netto/Desktop/Meus projetos/torneioBT/gerenciador-beach-tennis/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DuplasList from './components/Duplas/DuplasList';\nimport FaseDeGrupos from './components/Torneio/FaseDeGrupos';\nimport FaseEliminatoria from './components/Torneio/FaseEliminatoria';\nimport FaseFinal from './components/Torneio/FaseFinal';\nimport MeusTorneios from './components/Torneio/MeusTorneios';\nimport {\n  saveTournament,\n  loadTournaments,\n  deleteTournament,\n  generateTournament,\n  classificarDuplasPorDesempate,\n} from './utils/torneioUtils';\nimport './App.css';\nimport gameDay from './assets/img/game-day.svg';\nimport btConnectLogo from './assets/img/btConnect.png';\nimport tournamentsIcon from './assets/icons/tournaments.svg';\n\nfunction App() {\n  // ... (outras funÃ§Ãµes e estados permanecem iguais)\n\n  const gerarRelatorioEstatisticas = () => {\n    const todosOsJogos = [\n      ...currentTournament.grupos.flatMap((grupo) => grupo.jogos),\n      ...currentTournament.jogosEliminatoria.filter((jogo) => jogo.placar !== 'BYE'),\n    ].filter((jogo) => jogo.submetido);\n\n    console.log('Todos os jogos para relatÃ³rio:', todosOsJogos);\n    const totalPartidas = todosOsJogos.length;\n    const totalGames = todosOsJogos.reduce((acc, jogo) => {\n      const [g1, g2] = jogo.placar.split('-').map(Number);\n      return acc + (isNaN(g1) || isNaN(g2) ? 0 : g1 + g2);\n    }, 0);\n\n    let historicoDuplas = currentTournament.historicoDuplas || {};\n    if (Object.keys(historicoDuplas).length === 0) {\n      console.warn('historicoDuplas estÃ¡ vazio ou undefined, reconstruindo a partir dos jogos.');\n      historicoDuplas = currentTournament.duplas.reduce((acc, dupla) => {\n        acc[dupla.join('')] = { dupla, pontos: 0, jogos: 0, jogosVencidos: 0, gamesVencidos: 0, gamesPerdidos: 0 };\n        return acc;\n      }, {});\n\n      todosOsJogos.forEach((jogo) => {\n        const [g1, g2] = jogo.placar.split('-').map(Number);\n        if (isNaN(g1) || isNaN(g2)) return;\n        const chave1 = jogo.dupla1.join('');\n        const chave2 = jogo.dupla2.join('');\n        historicoDuplas[chave1].jogos += 1;\n        historicoDuplas[chave2].jogos += 1;\n        if (g1 > g2) {\n          historicoDuplas[chave1].pontos += 5;\n          historicoDuplas[chave1].jogosVencidos += 1;\n          historicoDuplas[chave1].gamesVencidos += g1;\n          historicoDuplas[chave1].gamesPerdidos += g2;\n          historicoDuplas[chave2].pontos += 2;\n          historicoDuplas[chave2].gamesVencidos += g2;\n          historicoDuplas[chave2].gamesPerdidos += g1;\n        } else {\n          historicoDuplas[chave2].pontos += 5;\n          historicoDuplas[chave2].jogosVencidos += 1;\n          historicoDuplas[chave2].gamesVencidos += g2;\n          historicoDuplas[chave2].gamesPerdidos += g1;\n          historicoDuplas[chave1].pontos += 2;\n          historicoDuplas[chave1].gamesVencidos += g1;\n          historicoDuplas[chave1].gamesPerdidos += g2;\n        }\n      });\n      updateTournamentField('historicoDuplas', historicoDuplas);\n    }\n\n    const estatisticasDuplas = Object.values(historicoDuplas).map((dados) => {\n      const derrotas = dados.jogos - dados.jogosVencidos;\n      const saldoGames = dados.gamesVencidos - dados.gamesPerdidos;\n      const posicaoRanking =\n        currentTournament.ranking.find((r) => r.dupla.join('') === dados.dupla.join(''))?.lugar || '-';\n      return {\n        dupla: dados.dupla.join(' & '),\n        jogos: dados.jogos,\n        vitorias: dados.jogosVencidos,\n        derrotas,\n        gamesVencidos: dados.gamesVencidos,\n        gamesPerdidos: dados.gamesPerdidos,\n        saldoGames,\n        posicaoRanking,\n      };\n    }).sort((a, b) => {\n      if (a.posicaoRanking === '-' && b.posicaoRanking !== '-') return 1;\n      if (b.posicaoRanking === '-' && a.posicaoRanking !== '-') return -1;\n      if (a.posicaoRanking !== '-' && b.posicaoRanking !== '-') return a.posicaoRanking - b.posicaoRanking;\n      return b.saldoGames - a.saldoGames;\n    });\n\n    const melhorCampanha = estatisticasDuplas.reduce(\n      (melhor, atual) => (atual.saldoGames > melhor.saldoGames ? atual : melhor),\n      estatisticasDuplas[0] || { dupla: 'Nenhuma', vitorias: 0, jogos: 0, saldoGames: 0 }\n    );\n\n    console.log('EstatÃ­sticas finais:', estatisticasDuplas);\n    return {\n      totalPartidas,\n      totalGames,\n      estatisticasDuplas,\n      melhorCampanha,\n      todosOsJogos, // Adicionamos isso para usar no histÃ³rico\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      {/* ... (outras partes do cÃ³digo permanecem iguais) */}\n      <main>\n        {/* ... (outras fases permanecem iguais) */}\n        {faseAtual === 'finalizado' && (\n          <>\n            <h3>Ranking Final:</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>POSIÃ‡ÃƒO</th>\n                  <th>DUPLAS</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentTournament.ranking.map((posiÃ§Ã£o, index) => {\n                  let medalha = '';\n                  let color = '#000';\n                  if (posiÃ§Ã£o.lugar === 1) {\n                    medalha = 'ðŸ¥‡';\n                    color = 'gold';\n                  } else if (posiÃ§Ã£o.lugar === 2) {\n                    medalha = 'ðŸ¥ˆ';\n                    color = 'silver';\n                  } else if (posiÃ§Ã£o.lugar === 3) {\n                    medalha = 'ðŸ¥‰';\n                    color = 'brown';\n                  }\n                  return (\n                    <tr key={index}>\n                      <td style={{ color }}>{medalha} {posiÃ§Ã£o.lugar}Âº Colocado</td>\n                      <td>{posiÃ§Ã£o.dupla.join(' & ')}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            <div className=\"relatorio-estatisticas\">\n              <h3>EstatÃ­sticas Gerais do Torneio</h3>\n              {(() => {\n                const { totalPartidas, totalGames, estatisticasDuplas, melhorCampanha, todosOsJogos } =\n                  gerarRelatorioEstatisticas();\n                return (\n                  <>\n                    <p><strong>Total de Partidas Disputadas:</strong> {totalPartidas}</p>\n                    <p><strong>Total de Games Disputados:</strong> {totalGames}</p>\n                    <p>\n                      <strong>Melhor Campanha:</strong> {melhorCampanha.dupla} (\n                      Saldo de Games: {melhorCampanha.saldoGames}, {melhorCampanha.vitorias} vitÃ³rias em{' '}\n                      {melhorCampanha.jogos} jogos)\n                    </p>\n                    <h4>EstatÃ­sticas por Dupla</h4>\n                    {estatisticasDuplas.length > 0 ? (\n                      <table>\n                        <thead>\n                          <tr>\n                            <th>POSIÃ‡ÃƒO</th>\n                            <th>DUPLA</th>\n                            <th>PARTIDAS</th>\n                            <th>VITÃ“RIAS</th>\n                            <th>DERROTAS</th>\n                            <th>GAMES (V/P)</th>\n                            <th>SALDO GAMES</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {estatisticasDuplas.map((dupla, index) => (\n                            <tr key={index}>\n                              <td>{dupla.posicaoRanking !== '-' ? `${dupla.posicaoRanking}Âº` : '-'}</td>\n                              <td>{dupla.dupla}</td>\n                              <td>{dupla.jogos}</td>\n                              <td>{dupla.vitorias}</td>\n                              <td>{dupla.derrotas}</td>\n                              <td>{dupla.gamesVencidos}/{dupla.gamesPerdidos}</td>\n                              <td>{dupla.saldoGames}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <p>Nenhuma estatÃ­stica disponÃ­vel para as duplas.</p>\n                    )}\n\n                    {/* Nova seÃ§Ã£o: HistÃ³rico de Jogos */}\n                    <h4>HistÃ³rico de Jogos</h4>\n                    {/* Fase de Grupos */}\n                    <h5>Fase de Grupos</h5>\n                    {currentTournament.grupos.map((grupo) => (\n                      <div key={`grupo-${grupo.id}`}>\n                        <h6>Grupo {grupo.id + 1}</h6>\n                        <table>\n                          <thead>\n                            <tr>\n                              <th>Jogo</th>\n                              <th>Dupla 1</th>\n                              <th>Placar</th>\n                              <th>Dupla 2</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {grupo.jogos\n                              .filter((jogo) => jogo.submetido)\n                              .map((jogo, index) => (\n                                <tr key={index}>\n                                  <td>{index + 1}</td>\n                                  <td>{jogo.dupla1.join(' & ')}</td>\n                                  <td>{jogo.placar}</td>\n                                  <td>{jogo.dupla2.join(' & ')}</td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    ))}\n\n                    {/* Fase EliminatÃ³ria */}\n                    <h5>Fase EliminatÃ³ria</h5>\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Jogo</th>\n                          <th>Dupla 1</th>\n                          <th>Placar</th>\n                          <th>Dupla 2</th>\n                          <th>Fase</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {currentTournament.jogosEliminatoria\n                          .filter((jogo) => jogo.submetido && jogo.fase !== 'Final' && jogo.fase !== 'Disputa 3Âº Lugar')\n                          .map((jogo, index) => (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{jogo.dupla1.join(' & ')}</td>\n                              <td>{jogo.placar}</td>\n                              <td>{jogo.dupla2.join(' & ')}</td>\n                              <td>{jogo.fase}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n\n                    {/* Fase Final */}\n                    <h5>Fase Final</h5>\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Jogo</th>\n                          <th>Dupla 1</th>\n                          <th>Placar</th>\n                          <th>Dupla 2</th>\n                          <th>Fase</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {currentTournament.jogosEliminatoria\n                          .filter((jogo) => jogo.submetido && (jogo.fase === 'Final' || jogo.fase === 'Disputa 3Âº Lugar'))\n                          .map((jogo, index) => (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{jogo.dupla1.join(' & ')}</td>\n                              <td>{jogo.placar}</td>\n                              <td>{jogo.dupla2.join(' & ')}</td>\n                              <td>{jogo.fase}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n\n                    <p>Torneio Finalizado em {new Date().toLocaleString('pt-BR')}!</p>\n                    <button onClick={resetTournament} className=\"novo-torneio-btn\">\n                      InÃ­cio\n                    </button>\n                  </>\n                );\n              })()}\n            </div>\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}